---
import NavOption from "./navOption.astro";
import DropDownOption from "./dropDownOption.astro";

// Astro no permite directamente el uso de funciones como en un framework React o Vue.
// Necesitamos incluir el manejo de estado en un script del lado del cliente.
---

<!-- Botón del menú hamburguesa -->
<button 
  class="tablet:hidden text-gray-700 focus:outline-none" 
  id="menuToggle"
>
  <svg
    class="w-6 h-6"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M4 6h16M4 12h16m-7 6h7"
    ></path>
  </svg>
</button>

<!-- Contenedor del menú de navegación -->
<div 
  id="navMenu"
  class="w-full flex-col tablet:flex-row tablet:flex items-center absolute tablet:static top-14 left-0 bg-white tablet:bg-transparent shadow-lg tablet:shadow-none transition-transform duration-300 hidden"
>
  <!-- Opción de navegación: Inicio -->
  <NavOption label="Inicio" />

  <!-- Menú desplegable para 'Servicios' -->
  <div class="py-4 relative inline-block group">
    <NavOption label="Servicios" />
    <div
      id="dropdownMenu"
      class="hidden absolute top-1 left-0 bg-white shadow-lg z-10 min-w-48 rounded-md opacity-0 translate-y-2 transition-opacity duration-300 ease-in-out group-hover:block group-hover:opacity-100 group-hover:translate-y-12 group-focus:opacity-100 group-focus:translate-y-12 group-focus:block"
    >
      <!-- Opciones del menú desplegable -->
      <DropDownOption label="Creación de Sitios Web" />
      <DropDownOption label="Diseño de Sitios" />
      <DropDownOption label="Branding e Identidad" />
    </div>
  </div>

  <!-- Opción de navegación: Contacto -->
  <NavOption label="Contacto" />
</div>

<script>
  // Seleccionamos el botón y el menú
  const menuToggle = document.getElementById("menuToggle");
  const navMenu = document.getElementById("navMenu");

  // Inicializamos el estado
  let isMenuOpen = false;

  // Verificamos si el botón existe antes de agregar el evento de clic
  if (menuToggle&&navMenu) {
    // Función para alternar el estado
    menuToggle.addEventListener("click", () => {
      isMenuOpen = !isMenuOpen;

      // Agregamos o removemos clases según el estado
      if (isMenuOpen) {
        navMenu.classList.remove("hidden");
        navMenu.classList.add("flex");
      } else {
        navMenu.classList.remove("flex");
        navMenu.classList.add("hidden");
      }
    });
  } else {
    console.error("Elemento con ID 'menuToggle' no encontrado");
  }
</script>
